# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com
before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
    # you may remove this if you don't need go generate
    - go generate ./...

builds:
  - id: subdomain-crawler
    main: cmd/subdomain-crawler/main.go
    binary: subdomain-crawler
    env:
      - CGO_ENABLED=0
    ldflags:
      - -s -w -X github.com/WangYihang/Subdomain-Crawler/pkg/common.Version={{.Version}} -X github.com/WangYihang/Subdomain-Crawler/pkg/common.BuildTime={{.Date}} -X github.com/WangYihang/Subdomain-Crawler/pkg/common.CommitHash={{.Commit}} -X main.builtBy=goreleaser'

archives:
  - format: tar.gz
    # this name template makes the OS and Arch compatible with the results of uname.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}_v{{- .Version }}
    # use zip for windows archives
    format_overrides:
    - goos: windows
      format: zip
    files:
      - README.md
      - input.txt
checksum:
  name_template: 'checksums.txt'
snapshot:
  name_template: "{{ incpatch .Version }}-next"
changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'

release:
  # Default is extracted from the origin remote URL or empty if its private
  # hosted.
  # You can also use Gitlab's internal project id by setting it in the name
  #  field and leaving the owner field empty.
  gitlab:
    owner: wyh
    name: subdomain-crawler

  # You can change the name of the release.
  #
  # Default: '{{.Tag}}' ('{{.PrefixedTag}}' on Pro)
  # Templates: allowed
  name_template: "{{.ProjectName}}-v{{.Version}}"

  # You can disable this pipe in order to not upload any artifacts.
  disable: false

  # What to do with the release notes in case there the release already exists.
  #
  # Valid options are:
  # - `keep-existing`: keep the existing notes
  # - `append`: append the current release notes to the existing notes
  # - `prepend`: prepend the current release notes to the existing notes
  # - `replace`: replace existing notes
  #
  # Default: 'keep-existing'
  mode: append

gitlab_urls:
  api: https://gitlab.walless.online/api/v4/
  download: https://gitlab.walless.online

  # set to true if you use a self-signed certificate
  skip_tls_verify: false

  # set to true if you want to upload to the Package Registry rather than attachments
  # Only works with GitLab 13.5+
  #
  # Since: v1.3
  use_package_registry: true

  # Set this if you set GITLAB_TOKEN to the value of CI_JOB_TOKEN.
  #
  # Default: false
  # Since: v1.11
  use_job_token: true

upx:
  -
    # Whether to enable it or not.
    enabled: true

    # Filter by build ID.
    ids: [ subdomain-crawler ]

    # Compress argument.
    # Valid options are from '1' (faster) to '9' (better), and 'best'.
    compress: best

    # Whether to try LZMA (slower).
    lzma: true

    # Whether to try all methods and filters (slow).
    brute: false

# The lines beneath this are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj
